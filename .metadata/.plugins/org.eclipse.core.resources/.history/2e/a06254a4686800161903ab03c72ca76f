package ru.lexpr.math;

public class Integral {
	
	public static final int STEPS = 10000000;
	public static final int THREADS = 10;
	volatile double result = 0.0;
	
	private Integral() {
	}
	
	static double singleThread(MathFunction f, double a, double b, int steps) {
		
		double summa = 0.0;
		double h = (b-a)/steps;
		
		for(int i=0; i < steps; i++) {
			double x = a+h*i+h/2;
			double y = f.function(x);
			summa += y*h;
		}
		
		return summa;
	}
	
	public static double singleThread(MathFunction f, double a, double b) {
		
		return singleThread(f, a, b, STEPS);
	}
	
	public static double multiThread(MathFunction f, double a, double b) {
		
		Integral sync = new Integral();
		Thread[] threads = new Thread[THREADS];
		
	}

}

