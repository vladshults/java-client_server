package ru.lexpr.datasync;

import static java.lang.System.out;

/*class Sync {
	public volatile int counter = 0;
}
*/

class Sync {
	public volatile int counter = 0;
	
	public int getCounter() {
		return counter;
	}
	
	public synchronized void increment() {
		counter++;
	}
}

public class Program {
	
	//static int counter = 0;
	
	public static void main(String[] args) throws InterruptedException {
		
		Thread t1,t2;
		//final Thread main = Thread.currentThread();
		
		//Object sync = new Object();
		Sync sync = new Sync();
		
		(t1 = new Thread(()->{
			for(int i=1; i<=100000; i++) {
				//out.printf("%s : %d\n", Thread.currentThread().getName(), i);
				//counter++;
				//synchronized (sync) {
				//	sync.counter++;
				//}
				sync.increment();
			}
		}, "A")).start();
		
		(t2 = new Thread(()->{
			for(int i=1; i<=100000; i++) {
				//out.printf("%s : %d\n", Thread.currentThread().getName(), i);
				//counter++;
				//synchronized (sync) {
				//	sync.counter++;
				//}
				sync.increment();
			}
		}, "B")).start();
		
		t1.join();
		t2.join();
		
		out.println(sync.getCounter());
	}
}
